generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  KARFARMA
  MODIR_SITE
  KARJOO
}

model User {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  email       String   @unique
  password    String?  // ممکن است وجود نداشته باشد اگر کاربر از طریق OAuth وارد شده باشد
  role        UserRole @default(KARJOO) // نقش پیش‌فرض
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // ارتباط یک به یک با JobSeeker
  jobSeeker   JobSeeker?

  // ارتباط یک به یک با Employer
  employer    Employer?
}

model Employer {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  companyName String
  industry    String   // زمینه فعالیت شرکت
  userId      String   @unique @map("user_id") @db.ObjectId // شناسه کاربر

  // ارتباط با User
  user        User     @relation(fields: [userId], references: [id])

  // ارتباط یک به چند با آگهی‌های شغلی
  jobListings JobListing[]
}

model JobSeeker {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  bio         String?
  resume      String?  // فایل رزومه
  userId      String   @unique @map("user_id") @db.ObjectId // شناسه کاربر

  // ارتباط با User
  user        User     @relation(fields: [userId], references: [id])

  // ارتباط یک به چند با درخواست‌های شغلی
  jobApplications JobApplication[]
}

model JobListing {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  location    String
  salary      Float?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  employerId  String   @map("employer_id") @db.ObjectId // شناسه کارفرما (ارتباط با Employer)

  // ارتباط با کارفرما (Employer)
  employer    Employer  @relation(fields: [employerId], references: [id])

  // ارتباط یک به چند با درخواست‌های شغلی
  applications JobApplication[]

  // ارتباط چند به چند با دسته‌بندی‌های شغلی از طریق جدول واسطه
  jobCategories JobListingJobCategory[]
}

model JobApplication {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  coverLetter String?
  resume      String?
  status      String   @default("pending") // وضعیت درخواست (pending, accepted, rejected)
  appliedAt   DateTime @default(now())

  jobId       String   @map("job_id") @db.ObjectId // شناسه آگهی شغلی
  jobSeekerId String   @map("job_seeker_id") @db.ObjectId // شناسه کارجو

  // ارتباط با آگهی شغلی
  job         JobListing @relation(fields: [jobId], references: [id])

  // ارتباط با کارجو (JobSeeker)
  jobSeeker   JobSeeker  @relation(fields: [jobSeekerId], references: [id])
}

model JobCategory {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   @unique

  // ارتباط چند به چند با آگهی‌های شغلی از طریق جدول واسطه
  jobListings JobListingJobCategory[]
}

model JobListingJobCategory {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  jobListingId String   @map("job_listing_id") @db.ObjectId
  jobCategoryId String   @map("job_category_id") @db.ObjectId

  // ارتباط با آگهی شغلی
  jobListing JobListing @relation(fields: [jobListingId], references: [id])

  // ارتباط با دسته‌بندی شغلی
  jobCategory JobCategory @relation(fields: [jobCategoryId], references: [id])
}

model Account {
  id                String   @id @default(auto()) @map("_id") @db.ObjectId
  userId           String   @map("user_id") @db.ObjectId // شناسه کاربر
  provider         String   // ارائه‌دهنده (مثلاً "google" یا "linkedin")
  providerAccountId String   // شناسه حساب کاربر در ارائه‌دهنده
  refresh_token    String?  // توکن تجدید
  access_token     String?  // توکن دسترسی
  expires_at       Int?     // تاریخ انقضای توکن
  token_type       String?  // نوع توکن
  scope            String?  // دامنه‌های دسترسی
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Session {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken  String   @unique
  userId       String   @map("user_id") @db.ObjectId // شناسه کاربر
  expires       DateTime // تاریخ انقضای نشست
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
